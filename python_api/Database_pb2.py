# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Database.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='Database.proto',
  package='Database',
  syntax='proto3',
  serialized_options=_b('\242\002\003HLW'),
  serialized_pb=_b('\n\x0e\x44\x61tabase.proto\x12\x08\x44\x61tabase\"b\n\x0cQueryRequest\x12\x10\n\x08\x66rame_id\x18\x01 \x01(\x05\x12\x0e\n\x06\x63ls_id\x18\x02 \x01(\x05\x12\x11\n\tnum_query\x18\x03 \x01(\x05\x12\r\n\x05query\x18\x04 \x03(\x02\x12\x0e\n\x06\x63\x65nter\x18\x05 \x03(\x02\"-\n\nQueryReply\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07indexes\x18\x02 \x03(\x02\x32\x86\x01\n\x0cQueryHandler\x12\x37\n\x05Query\x12\x16.Database.QueryRequest\x1a\x14.Database.QueryReply\"\x00\x12=\n\x0bQueryInsert\x12\x16.Database.QueryRequest\x1a\x14.Database.QueryReply\"\x00\x42\x06\xa2\x02\x03HLWb\x06proto3')
)




_QUERYREQUEST = _descriptor.Descriptor(
  name='QueryRequest',
  full_name='Database.QueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_id', full_name='Database.QueryRequest.frame_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cls_id', full_name='Database.QueryRequest.cls_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_query', full_name='Database.QueryRequest.num_query', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='query', full_name='Database.QueryRequest.query', index=3,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='center', full_name='Database.QueryRequest.center', index=4,
      number=5, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=126,
)


_QUERYREPLY = _descriptor.Descriptor(
  name='QueryReply',
  full_name='Database.QueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Database.QueryReply.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='indexes', full_name='Database.QueryReply.indexes', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=173,
)

DESCRIPTOR.message_types_by_name['QueryRequest'] = _QUERYREQUEST
DESCRIPTOR.message_types_by_name['QueryReply'] = _QUERYREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

QueryRequest = _reflection.GeneratedProtocolMessageType('QueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYREQUEST,
  '__module__' : 'Database_pb2'
  # @@protoc_insertion_point(class_scope:Database.QueryRequest)
  })
_sym_db.RegisterMessage(QueryRequest)

QueryReply = _reflection.GeneratedProtocolMessageType('QueryReply', (_message.Message,), {
  'DESCRIPTOR' : _QUERYREPLY,
  '__module__' : 'Database_pb2'
  # @@protoc_insertion_point(class_scope:Database.QueryReply)
  })
_sym_db.RegisterMessage(QueryReply)


DESCRIPTOR._options = None

_QUERYHANDLER = _descriptor.ServiceDescriptor(
  name='QueryHandler',
  full_name='Database.QueryHandler',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=176,
  serialized_end=310,
  methods=[
  _descriptor.MethodDescriptor(
    name='Query',
    full_name='Database.QueryHandler.Query',
    index=0,
    containing_service=None,
    input_type=_QUERYREQUEST,
    output_type=_QUERYREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='QueryInsert',
    full_name='Database.QueryHandler.QueryInsert',
    index=1,
    containing_service=None,
    input_type=_QUERYREQUEST,
    output_type=_QUERYREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_QUERYHANDLER)

DESCRIPTOR.services_by_name['QueryHandler'] = _QUERYHANDLER

# @@protoc_insertion_point(module_scope)
